
[shader]
Description=Multipass visualizer test

VisualizerTypeName=VisualizerFragmentQuad
VertexShaderFilename=VisualizerFragmentQuad.vert
FragmentShaderFilename=fine-scale-plasma.frag

BackgroundFloatRGB=0,0,0

#########################################################################
# When a [multipass] section is defined, the visualizer renders to
# framebuffers instead of the OpenGL swap buffer. Settings for each
# pass are space-separated:
#
#  -- Draw-target framebuffer number
#  -- Input framebuffer numbers: * for None, or comma-delimited list
#  -- Vertex shader filename or * to use the "primary" above
#  -- Fragment shader filename or * to use the "primary" above
#  -- Optional: VisualizerTypeName, if omitted, the viz conf one is used
#  -- Required if viz type uses them; semicolon-separated
#
#  Input framebuffer uniforms are always "input0", "input1" and so on,
#  where the numeric portion matches the framebuffer index used here.
#  They are mapped to the actual framebuffer handles at runtime (the
#  real framebuffer IDs may not match).
#
#  Currently only VisualizerVertexIntegerArray requires settings. As
#  noted above, the settings should be semicolon-separated like this:
#
#  VertexIntegerCount=1000;ArrayDrawingMode=Triangles
#
#########################################################################
[multipass]
# draw  inputs  vert  frag            viz-class & settings (none here)
  0     *       *     *
  1     0       *     fx-desaturate
  2     1       *     fx-sobel-edge
  1     2       *     fx-cloud-fringe
  2     0,1     *     fx-colorize
