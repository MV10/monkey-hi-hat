
# Derived from multiple sources:
# pass 0 plasma               https://www.shadertoy.com/view/XsVSzW
# pass 1 desaturate           http://stackoverflow.com/questions/9320953/what-algorithm-does-photoshop-use-to-desaturate-an-image
# pass 2 sobel edge-detection https://www.shadertoy.com/view/wtVGzh
# pass 3 cloudy vingette      https://www.shadertoy.com/view/llcXW7
# pass 4 colorization mixer   (no third-party)

[shader]
Description=Debug Test: multipass single-frame (same as oil_slick)

VertexSourceTypeName=VertexQuad
FragmentShaderFilename=multipass0.frag

BackgroundFloatRGB=0,0,0

#########################################################################
# When a [multipass] section is defined, the visualizer renders to
# framebuffers instead of the OpenGL swap buffer. Settings for each
# pass are space-separated:
#
#  -- Draw-target framebuffer number
#  -- Input framebuffers: * for none, or comma-delimited numbers/letters
#  -- Vertex shader filename or * to use the "primary" above
#  -- Fragment shader filename or * to use the "primary" above
#  -- Optional: VertexSourceTypeName, if omitted, the viz conf one is used
#  -- Required if vertex source type uses them; semicolon-separated
#
#  Input framebuffer uniforms are always "input0", "input1" and so on,
#  where the numeric portion matches the framebuffer index used here.
#  They are mapped to the actual framebuffer handles at runtime (the
#  real framebuffer IDs may not match).
#
#  Currently only VertexIntegerArray requires settings. As noted
#  above, the settings should be semicolon-separated like this:
#
#  VertexIntegerCount:1000;ArrayDrawingMode:Triangles
#
#  See "mpvizconf" for an alternate multipass format with viz.conf files.
#
#########################################################################
[multipass]
# draw  inputs  vert  frag            vertex source & settings (none here)
  0     *       *     *
  1     0       *     multipass1
  2     1       *     multipass2
  1     2       *     multipass3
  2     0,1     *     multipass4


# This frag library file is used by multipass1.frag, but it will be loaded
# and compiled once, and is technically available to any shader referenced
# within this configuration file.
[libraries]
multipass_desaturate
